name: 'Notifier'

on:
  # repository_dispatch:
  #   types: [slack-notification]
  # Allows to run this workflow from an API call
  # Benefit over a repository_dispatch: it takes the current PR branch workflow definition 
  # while a repository_dispatch would only use the default branch definition
  workflow_dispatch:
    inputs:
      type:  # collectable with ${{ github.event.inputs.type }}
        required: false
        type: choice
        options:
        - 'alert'
        - 'awareness'
        - 'build'
        - 'housekeeping'
        default: 'build'
      color:
        required: false
        type: choice
        options:
        - '#2EB67D'  # green
        - '#ECB22E'  # orange
        - '#FF0000'  # red
        - '#140000'  # black
        default: '#140000'
      title:
        required: true
        type: string
      message:
        required: true
        type: string
      # branch_name:
      #   required: true
      #   type: string
      # sha:
      #   required: true
      #   type: string
  # To be callable from a remote repository as a reusable workflow
  workflow_call:
    inputs:
      type:  # collectable with ${{ inputs.type }}
        required: false
        type: choice
        options:
        - alert
        - awareness
        - build
        - housekeeping
        default: 'build'
      color:
        required: false
        type: choice
        options:
        - '#2EB67D'  # green
        - '#ECB22E'  # orange
        - '#FF0000'  # red
        - '#140000'  # black
        default: '#140000'
      title:
        required: true
        type: string
      message:
        required: true
        type: string
      # branch_name:
      #   required: true
      #   type: string
      # sha:
      #   required: true
      #   type: string
    # secrets:
    #   token:
    #     required: true

env:
  MSG_MINIMAL: 'Ref,Commit'
  SLACK_FOOTER: ''

jobs:
  slack_notification:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - name: 'Send Slack Alert Notification'
        if: github.event.inputs.type == 'alert' || inputs.type == 'alert'
        # uses: rtCamp/action-slack-notify@v2.2.0
        # ^^ to be used as soon as PR https://github.com/rtCamp/action-slack-notify/pull/79 gets approved by the rtCamp maintainer
        uses: bogaertg/action-slack-notify@95fbd80cf578cd856020cc7729d2ed81f9652064
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_ALERTS_WEBHOOK }}
          SLACK_USERNAME: ${{ secrets.SLACK_USERNAME || 'Platform Team' }}
          SLACK_TITLE: ${{ github.event.inputs.title || inputs.title }}
          SLACK_MESSAGE: ${{ github.event.inputs.message || inputs.message }}
          SLACK_COLOR: ${{ github.event.inputs.color || inputs.color || '#FF0000' }}
          SLACK_ICON: 'https://octodex.github.com/images/Sentrytocat_octodex.jpg'
      - name: 'Send Slack Notification to Raise Awareness'
        if: github.event.inputs.type == 'awareness' || inputs.type == 'awareness'
        # uses: rtCamp/action-slack-notify@v2.2.0
        # ^^ to be used as soon as PR https://github.com/rtCamp/action-slack-notify/pull/79 gets approved by the rtCamp maintainer
        uses: bogaertg/action-slack-notify@95fbd80cf578cd856020cc7729d2ed81f9652064
        env:
          SLACK_ICON: 'https://octodex.github.com/images/collabocats.jpg'
          SLACK_WEBHOOK: ${{ secrets.SLACK_AWARENESS_WEBHOOK || secrets.SLACK_BUILD_WEBHOOK }}
          SLACK_USERNAME: ${{ secrets.SLACK_USERNAME || 'Platform Team' }}
          SLACK_COLOR: ${{ github.event.client_payload.color }}
          SLACK_TITLE: ${{ github.event.client_payload.title }}
          SLACK_MESSAGE: ${{ github.event.client_payload.message }}
          MSG_MINIMAL: Ref,Commit
          SLACK_FOOTER: ''
      - name: 'Send Slack Build Completion Notification'
        if: github.event.inputs.type == 'build' || inputs.type == 'build'
        # uses: rtCamp/action-slack-notify@v2.2.0
        # ^^ to be used as soon as PR https://github.com/rtCamp/action-slack-notify/pull/79 gets approved by the rtCamp maintainer
        uses: bogaertg/action-slack-notify@95fbd80cf578cd856020cc7729d2ed81f9652064
        env:
          SLACK_ICON: 'https://octodex.github.com/images/constructocat2.jpg'
          SLACK_WEBHOOK: ${{ secrets.SLACK_BUILD_WEBHOOK }}
          SLACK_USERNAME: ${{ secrets.SLACK_USERNAME || 'Platform Team' }}
          SLACK_COLOR: ${{ github.event.client_payload.color }}
          SLACK_TITLE: ${{ github.event.client_payload.title }}
          SLACK_MESSAGE: ${{ github.event.client_payload.message }}
          MSG_MINIMAL: Ref,Commit
          SLACK_FOOTER: ''
      - name: 'Send Slack Housekeeping Notification'
        if: github.event.inputs.type == 'housekeeping' || inputs.type == 'housekeeping'
        # uses: rtCamp/action-slack-notify@v2.2.0
        # ^^ to be used as soon as PR https://github.com/rtCamp/action-slack-notify/pull/79 gets approved by the rtCamp maintainer
        uses: bogaertg/action-slack-notify@95fbd80cf578cd856020cc7729d2ed81f9652064
        env:
          SLACK_ICON: 'https://octodex.github.com/images/mona-the-rivetertocat.png'
          SLACK_WEBHOOK: ${{ secrets.SLACK_HOUSEKEEPING_WEBHOOK || secrets.SLACK_BUILD_WEBHOOK }}
          SLACK_USERNAME: ${{ secrets.SLACK_USERNAME || 'Platform Team' }}
          SLACK_COLOR: ${{ github.event.client_payload.color }}
          SLACK_TITLE: ${{ github.event.client_payload.title }}
          SLACK_MESSAGE: ${{ github.event.client_payload.message }}
          MSG_MINIMAL: Ref,Commit
          SLACK_FOOTER: ''
